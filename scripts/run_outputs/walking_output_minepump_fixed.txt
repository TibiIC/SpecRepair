Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.74s

Elapsed time: 9.06s

Elapsed time: 11.42s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.85s

Elapsed time: 9.2s

Elapsed time: 11.69s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.58s

Elapsed time: 8.9s

Elapsed time: 11.22s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 0, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.53s

Elapsed time: 8.83s

Elapsed time: 11.08s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 0, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.18s

Elapsed time: 8.48s

Elapsed time: 10.74s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 0, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.15s

Elapsed time: 8.44s

Elapsed time: 10.71s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 0, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.33s

Elapsed time: 7.48s

Elapsed time: 9.74s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 4.
Moving to next run [0, 0, 0, 0, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.3s

Elapsed time: 7.27s

Elapsed time: 9.2s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 0, 0, 1, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '4'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.34s

Elapsed time: 7.32s

Elapsed time: 9.27s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 4] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 0, 0, 1, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.37s

Elapsed time: 10.34s

Elapsed time: 12.28s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.51s

Elapsed time: 10.49s

Elapsed time: 12.44s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.37s

Elapsed time: 10.34s

Elapsed time: 12.29s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.6s

Elapsed time: 10.61s

Elapsed time: 12.63s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.19s

Elapsed time: 10.15s

Elapsed time: 12.12s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 0, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.5s

Elapsed time: 10.45s

Elapsed time: 12.36s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 0, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.25s

Elapsed time: 10.25s

Elapsed time: 12.24s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 0, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.71s

Elapsed time: 10.72s

Elapsed time: 12.69s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 0, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 1, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.35s

Elapsed time: 10.34s

Elapsed time: 12.3s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 1, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.51s

Elapsed time: 10.51s

Elapsed time: 12.45s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.36s

Elapsed time: 10.35s

Elapsed time: 12.28s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.33s

Elapsed time: 10.27s

Elapsed time: 12.2s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 1, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.44s

Elapsed time: 10.4s

Elapsed time: 12.37s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 1, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.39s

Elapsed time: 10.38s

Elapsed time: 12.35s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 1, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.53s

Elapsed time: 10.54s

Elapsed time: 12.47s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 1, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.36s

Elapsed time: 10.37s

Elapsed time: 12.29s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 1, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.58s

Elapsed time: 7.53s

Elapsed time: 9.43s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 0, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.65s

Elapsed time: 7.62s

Elapsed time: 9.56s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 0, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.53s

Elapsed time: 7.45s

Elapsed time: 9.38s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 0, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.56s

Elapsed time: 7.52s

Elapsed time: 9.46s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 0, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.31s

Elapsed time: 7.28s

Elapsed time: 9.25s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 0, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.29s

Elapsed time: 7.26s

Elapsed time: 9.19s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 0, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.35s

Elapsed time: 7.33s

Elapsed time: 9.25s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 4.
Moving to next run [0, 0, 0, 0, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.61s

Elapsed time: 7.64s

Elapsed time: 9.6s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 0, 1, 1, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '4'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.35s

Elapsed time: 7.35s

Elapsed time: 9.34s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 4] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 0, 1, 1, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.27s

Elapsed time: 10.3s

Elapsed time: 12.25s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.17s

Elapsed time: 10.1s

Elapsed time: 12.16s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.33s

Elapsed time: 10.28s

Elapsed time: 12.18s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.28s

Elapsed time: 10.25s

Elapsed time: 12.18s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.32s

Elapsed time: 10.31s

Elapsed time: 12.24s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 0, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.24s

Elapsed time: 10.17s

Elapsed time: 12.08s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 0, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.12s

Elapsed time: 10.13s

Elapsed time: 12.08s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 0, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.16s

Elapsed time: 10.12s

Elapsed time: 12.03s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 0, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 1, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.3s

Elapsed time: 10.23s

Elapsed time: 12.16s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 1, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.28s

Elapsed time: 10.27s

Elapsed time: 12.18s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.25s

Elapsed time: 10.19s

Elapsed time: 12.11s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.41s

Elapsed time: 10.46s

Elapsed time: 12.45s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 1, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.2s

Elapsed time: 10.15s

Elapsed time: 12.07s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 1, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.19s

Elapsed time: 10.16s

Elapsed time: 12.08s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 1, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.24s

Elapsed time: 10.18s

Elapsed time: 12.09s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 1, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.26s

Elapsed time: 10.24s

Elapsed time: 12.16s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 1, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.57s

Elapsed time: 7.53s

Elapsed time: 9.43s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.5s

Elapsed time: 7.45s

Elapsed time: 9.39s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.49s

Elapsed time: 7.43s

Elapsed time: 9.35s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 1, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.48s

Elapsed time: 7.44s

Elapsed time: 9.37s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 1, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.19s

Elapsed time: 7.13s

Elapsed time: 9.03s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 1, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.2s

Elapsed time: 7.16s

Elapsed time: 9.08s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 1, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.23s

Elapsed time: 7.21s

Elapsed time: 9.11s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 4.
Moving to next run [0, 0, 0, 1, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.22s

Elapsed time: 7.16s

Elapsed time: 9.06s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 1, 0, 1, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '4'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.21s

Elapsed time: 7.17s

Elapsed time: 9.07s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 4] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 1, 0, 1, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.1s

Elapsed time: 10.04s

Elapsed time: 11.98s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.08s

Elapsed time: 10.03s

Elapsed time: 11.93s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.07s

Elapsed time: 10.01s

Elapsed time: 11.91s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.12s

Elapsed time: 10.09s

Elapsed time: 11.99s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.08s

Elapsed time: 10.04s

Elapsed time: 11.96s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 0, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.09s

Elapsed time: 10.04s

Elapsed time: 11.94s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 0, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.11s

Elapsed time: 10.07s

Elapsed time: 11.97s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 0, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.06s

Elapsed time: 10.01s

Elapsed time: 11.93s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 0, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 1, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.23s

Elapsed time: 10.19s

Elapsed time: 12.1s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 1, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.36s

Elapsed time: 10.34s

Elapsed time: 12.23s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.22s

Elapsed time: 10.2s

Elapsed time: 12.12s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.26s

Elapsed time: 10.23s

Elapsed time: 12.14s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 1, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.18s

Elapsed time: 10.14s

Elapsed time: 12.06s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 1, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.16s

Elapsed time: 10.1s

Elapsed time: 12.01s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 1, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.16s

Elapsed time: 10.14s

Elapsed time: 12.06s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 1, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.21s

Elapsed time: 10.15s

Elapsed time: 12.08s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 1, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.53s

Elapsed time: 7.47s

Elapsed time: 9.4s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 1, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.5s

Elapsed time: 7.45s

Elapsed time: 9.37s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 1, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.49s

Elapsed time: 7.45s

Elapsed time: 9.37s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 1, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.49s

Elapsed time: 7.48s

Elapsed time: 9.4s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 1, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.21s

Elapsed time: 7.19s

Elapsed time: 9.12s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 1, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.19s

Elapsed time: 7.15s

Elapsed time: 9.08s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 1, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.22s

Elapsed time: 7.15s

Elapsed time: 9.07s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 4.
Moving to next run [0, 0, 0, 1, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.18s

Elapsed time: 7.14s

Elapsed time: 9.05s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 1, 1, 1, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '4'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.18s

Elapsed time: 7.13s

Elapsed time: 9.04s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 4] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 1, 1, 1, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.13s

Elapsed time: 10.1s

Elapsed time: 12.01s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.1s

Elapsed time: 10.08s

Elapsed time: 12.0s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.1s

Elapsed time: 10.05s

Elapsed time: 11.96s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.08s

Elapsed time: 10.05s

Elapsed time: 11.98s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.11s

Elapsed time: 10.05s

Elapsed time: 11.96s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 0, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.08s

Elapsed time: 10.05s

Elapsed time: 11.95s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 0, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.05s

Elapsed time: 10.0s

Elapsed time: 11.92s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 0, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.09s

Elapsed time: 10.02s

Elapsed time: 11.96s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 0, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 1, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.29s

Elapsed time: 10.27s

Elapsed time: 12.16s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 1, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.21s

Elapsed time: 10.17s

Elapsed time: 12.09s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.25s

Elapsed time: 10.21s

Elapsed time: 12.13s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.23s

Elapsed time: 10.17s

Elapsed time: 12.09s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 1, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.18s

Elapsed time: 10.16s

Elapsed time: 12.06s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 1, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.2s

Elapsed time: 10.13s

Elapsed time: 12.04s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 1, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.19s

Elapsed time: 10.15s

Elapsed time: 12.08s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 1, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.19s

Elapsed time: 10.15s

Elapsed time: 12.06s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 1, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.51s

Elapsed time: 7.41s

#########################
Last run ended with [0, 1, 0, 0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.48s

Elapsed time: 7.38s

#########################
Last run ended with [0, 1, 0, 1] and max_options=[2, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.49s

Elapsed time: 7.38s

#########################
Last run ended with [0, 1, 0, 2] and max_options=[2, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.48s

Elapsed time: 7.38s

#########################
Last run ended with [0, 1, 0, 3] and max_options=[2, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.21s

Elapsed time: 7.12s

#########################
Last run ended with [0, 1, 1, 0] and max_options=[2, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.18s

Elapsed time: 7.09s

#########################
Last run ended with [0, 1, 1, 1] and max_options=[2, 1, 1, 5].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.2s

Elapsed time: 7.11s

#########################
Last run ended with [0, 1, 1, 2] and max_options=[2, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 4.
Moving to next run [0, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.18s

Elapsed time: 7.09s

#########################
Last run ended with [0, 1, 1, 3] and max_options=[2, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 1, 1, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '4'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.18s

Elapsed time: 7.08s

#########################
Last run ended with [0, 1, 1, 4] and max_options=[2, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 1, 1, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.1s

Elapsed time: 10.0s

#########################
Last run ended with [0, 1, 1, 5, 0, 0, 0] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 1, 1, 5, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.09s

Elapsed time: 10.0s

#########################
Last run ended with [0, 1, 1, 5, 0, 0, 1] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 1, 1, 5, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.05s

Elapsed time: 9.94s

#########################
Last run ended with [0, 1, 1, 5, 0, 0, 2] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 1, 1, 5, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.06s

Elapsed time: 9.98s

#########################
Last run ended with [0, 1, 1, 5, 0, 0, 3] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 1, 1, 5, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.11s

Elapsed time: 10.04s

#########################
Last run ended with [0, 1, 1, 5, 0, 1, 0] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 1, 1, 5, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.06s

Elapsed time: 9.97s

#########################
Last run ended with [0, 1, 1, 5, 0, 1, 1] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 1, 1, 5, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.07s

Elapsed time: 9.97s

#########################
Last run ended with [0, 1, 1, 5, 0, 1, 2] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 1, 1, 5, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.08s

Elapsed time: 9.99s

#########################
Last run ended with [0, 1, 1, 5, 0, 1, 3] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 1, 1, 5, 1, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.36s

Elapsed time: 10.26s

#########################
Last run ended with [0, 1, 1, 5, 1, 0, 0] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 1, 1, 5, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.57s

Elapsed time: 10.52s

#########################
Last run ended with [0, 1, 1, 5, 1, 0, 1] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 1, 1, 5, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.22s

Elapsed time: 10.13s

#########################
Last run ended with [0, 1, 1, 5, 1, 0, 2] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 1, 1, 5, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.22s

Elapsed time: 10.14s

#########################
Last run ended with [0, 1, 1, 5, 1, 0, 3] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 1, 1, 5, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.14s

Elapsed time: 10.05s

#########################
Last run ended with [0, 1, 1, 5, 1, 1, 0] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 1, 1, 5, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.16s

Elapsed time: 10.06s

#########################
Last run ended with [0, 1, 1, 5, 1, 1, 1] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 1, 1, 5, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.22s

Elapsed time: 10.12s

#########################
Last run ended with [0, 1, 1, 5, 1, 1, 2] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 1, 1, 5, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.18s

Elapsed time: 10.09s

#########################
Last run ended with [0, 1, 1, 5, 1, 1, 3] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.56s

Elapsed time: 7.53s

Elapsed time: 9.43s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.57s

Elapsed time: 7.52s

Elapsed time: 9.41s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.52s

Elapsed time: 7.5s

Elapsed time: 9.4s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 0, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.53s

Elapsed time: 7.47s

Elapsed time: 9.38s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 0, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.25s

Elapsed time: 7.22s

Elapsed time: 9.16s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 0, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.23s

Elapsed time: 7.18s

Elapsed time: 9.1s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 0, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.22s

Elapsed time: 7.17s

Elapsed time: 9.09s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 4.
Moving to next run [1, 0, 0, 0, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.25s

Elapsed time: 7.21s

Elapsed time: 9.11s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 0, 0, 1, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '4'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.27s

Elapsed time: 7.24s

Elapsed time: 9.15s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 4] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 0, 0, 1, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.16s

Elapsed time: 10.1s

Elapsed time: 12.05s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.13s

Elapsed time: 10.07s

Elapsed time: 12.0s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.13s

Elapsed time: 10.09s

Elapsed time: 11.99s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.1s

Elapsed time: 10.05s

Elapsed time: 11.95s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.2s

Elapsed time: 10.12s

Elapsed time: 12.02s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 0, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.11s

Elapsed time: 10.08s

Elapsed time: 11.99s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 0, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.14s

Elapsed time: 10.07s

Elapsed time: 11.97s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 0, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.08s

Elapsed time: 10.02s

Elapsed time: 11.95s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 0, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 1, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.37s

Elapsed time: 10.36s

Elapsed time: 12.27s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 1, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.24s

Elapsed time: 10.21s

Elapsed time: 12.11s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.3s

Elapsed time: 10.25s

Elapsed time: 12.19s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.27s

Elapsed time: 10.23s

Elapsed time: 12.13s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 1, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.19s

Elapsed time: 10.13s

Elapsed time: 12.03s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 1, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.23s

Elapsed time: 10.2s

Elapsed time: 12.12s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 1, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.2s

Elapsed time: 10.18s

Elapsed time: 12.1s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 1, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.22s

Elapsed time: 10.19s

Elapsed time: 12.11s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 1, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 0, 1, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.58s

Elapsed time: 7.54s

Elapsed time: 9.44s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 0, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.55s

Elapsed time: 7.49s

Elapsed time: 9.39s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 0, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.54s

Elapsed time: 7.5s

Elapsed time: 9.44s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 0, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.54s

Elapsed time: 7.51s

Elapsed time: 9.43s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 0, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.4s

Elapsed time: 7.41s

Elapsed time: 9.31s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 0, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.22s

Elapsed time: 7.2s

Elapsed time: 9.14s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 0, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.28s

Elapsed time: 7.24s

Elapsed time: 9.18s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 4.
Moving to next run [1, 0, 0, 0, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.3s

Elapsed time: 7.26s

Elapsed time: 9.18s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 0, 1, 1, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '4'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.25s

Elapsed time: 7.22s

Elapsed time: 9.14s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 4] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 0, 1, 1, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.13s

Elapsed time: 10.08s

Elapsed time: 11.98s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.16s

Elapsed time: 10.1s

Elapsed time: 12.03s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.13s

Elapsed time: 10.09s

Elapsed time: 12.02s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.11s

Elapsed time: 10.07s

Elapsed time: 11.99s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.17s

Elapsed time: 10.14s

Elapsed time: 12.06s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 0, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.11s

Elapsed time: 10.06s

Elapsed time: 11.97s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 0, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.13s

Elapsed time: 10.07s

Elapsed time: 11.99s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 0, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.16s

Elapsed time: 10.15s

Elapsed time: 12.07s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 0, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 1, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.26s

Elapsed time: 10.19s

Elapsed time: 12.13s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 1, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.27s

Elapsed time: 10.25s

Elapsed time: 12.19s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.3s

Elapsed time: 10.27s

Elapsed time: 12.19s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.26s

Elapsed time: 10.24s

Elapsed time: 12.14s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 1, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.21s

Elapsed time: 10.17s

Elapsed time: 12.07s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 1, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.21s

Elapsed time: 10.17s

Elapsed time: 12.09s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 1, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.21s

Elapsed time: 10.17s

Elapsed time: 12.09s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 1, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.21s

Elapsed time: 10.18s

Elapsed time: 12.09s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 1, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 1, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.53s

Elapsed time: 7.47s

Elapsed time: 9.38s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.53s

Elapsed time: 7.47s

Elapsed time: 9.38s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.53s

Elapsed time: 7.48s

Elapsed time: 9.38s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 1, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.96s

Elapsed time: 7.94s

Elapsed time: 9.85s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 1, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.23s

Elapsed time: 7.22s

Elapsed time: 9.18s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 1, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.18s

Elapsed time: 7.13s

Elapsed time: 9.06s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 1, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.2s

Elapsed time: 7.15s

Elapsed time: 9.06s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 4.
Moving to next run [1, 0, 0, 1, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.16s

Elapsed time: 7.1s

Elapsed time: 9.02s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 1, 0, 1, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '4'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.25s

Elapsed time: 7.21s

Elapsed time: 9.14s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 4] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 1, 0, 1, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.09s

Elapsed time: 10.06s

Elapsed time: 11.97s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.1s

Elapsed time: 10.08s

Elapsed time: 12.01s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.11s

Elapsed time: 10.08s

Elapsed time: 12.0s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.11s

Elapsed time: 10.06s

Elapsed time: 11.98s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.13s

Elapsed time: 10.09s

Elapsed time: 12.12s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 0, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.12s

Elapsed time: 10.08s

Elapsed time: 11.99s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 0, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.12s

Elapsed time: 10.07s

Elapsed time: 11.97s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 0, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.27s

Elapsed time: 10.24s

Elapsed time: 12.15s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 0, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 1, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.25s

Elapsed time: 10.2s

Elapsed time: 12.12s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 1, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.29s

Elapsed time: 10.25s

Elapsed time: 12.18s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.2s

Elapsed time: 10.15s

Elapsed time: 12.07s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.23s

Elapsed time: 10.17s

Elapsed time: 12.12s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 1, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.18s

Elapsed time: 10.14s

Elapsed time: 12.06s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 1, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.19s

Elapsed time: 10.14s

Elapsed time: 12.05s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 1, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.15s

Elapsed time: 10.09s

Elapsed time: 12.0s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 1, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.83s

Elapsed time: 10.78s

Elapsed time: 12.7s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 1, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 1, 1, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.55s

Elapsed time: 7.51s

Elapsed time: 9.42s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 1, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.56s

Elapsed time: 7.51s

Elapsed time: 9.43s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 1, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.52s

Elapsed time: 7.46s

Elapsed time: 9.39s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 1, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.49s

Elapsed time: 7.43s

Elapsed time: 9.36s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 1, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.22s

Elapsed time: 7.17s

Elapsed time: 9.1s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 1, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.18s

Elapsed time: 7.12s

Elapsed time: 9.05s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 1, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.18s

Elapsed time: 7.13s

Elapsed time: 9.03s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 4.
Moving to next run [1, 0, 0, 1, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.25s

Elapsed time: 7.19s

Elapsed time: 9.13s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 1, 1, 1, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '4'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.17s

Elapsed time: 7.12s

Elapsed time: 9.04s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 4] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 1, 1, 1, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.08s

Elapsed time: 10.01s

Elapsed time: 11.92s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.11s

Elapsed time: 10.05s

Elapsed time: 11.96s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.08s

Elapsed time: 10.02s

Elapsed time: 11.95s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.13s

Elapsed time: 10.11s

Elapsed time: 12.06s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.09s

Elapsed time: 10.05s

Elapsed time: 11.98s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 0, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.13s

Elapsed time: 10.09s

Elapsed time: 12.0s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 0, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.06s

Elapsed time: 10.0s

Elapsed time: 11.92s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 0, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.06s

Elapsed time: 10.0s

Elapsed time: 11.92s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 0, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 1, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.23s

Elapsed time: 10.16s

Elapsed time: 12.08s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 1, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.21s

Elapsed time: 10.15s

Elapsed time: 12.06s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.23s

Elapsed time: 10.16s

Elapsed time: 12.09s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.21s

Elapsed time: 10.14s

Elapsed time: 12.06s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 1, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.13s

Elapsed time: 10.07s

Elapsed time: 11.99s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 1, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.2s

Elapsed time: 10.13s

Elapsed time: 12.08s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 1, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.15s

Elapsed time: 10.09s

Elapsed time: 12.01s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 1, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.21s

Elapsed time: 10.16s

Elapsed time: 12.1s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 1, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.53s

Elapsed time: 7.46s

#########################
Last run ended with [1, 1, 0, 0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.53s

Elapsed time: 7.43s

#########################
Last run ended with [1, 1, 0, 1] and max_options=[2, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.48s

Elapsed time: 7.38s

#########################
Last run ended with [1, 1, 0, 2] and max_options=[2, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.5s

Elapsed time: 7.39s

#########################
Last run ended with [1, 1, 0, 3] and max_options=[2, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.18s

Elapsed time: 7.14s

#########################
Last run ended with [1, 1, 1, 0] and max_options=[2, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.22s

Elapsed time: 7.17s

#########################
Last run ended with [1, 1, 1, 1] and max_options=[2, 1, 1, 5].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.18s

Elapsed time: 7.11s

#########################
Last run ended with [1, 1, 1, 2] and max_options=[2, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 4.
Moving to next run [1, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.22s

Elapsed time: 7.16s

#########################
Last run ended with [1, 1, 1, 3] and max_options=[2, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 1, 1, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '4'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.19s

Elapsed time: 7.11s

#########################
Last run ended with [1, 1, 1, 4] and max_options=[2, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 1, 1, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.06s

Elapsed time: 9.98s

#########################
Last run ended with [1, 1, 1, 5, 0, 0, 0] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 1, 1, 5, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.07s

Elapsed time: 9.97s

#########################
Last run ended with [1, 1, 1, 5, 0, 0, 1] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 1, 1, 5, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.11s

Elapsed time: 10.03s

#########################
Last run ended with [1, 1, 1, 5, 0, 0, 2] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 1, 1, 5, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.08s

Elapsed time: 9.97s

#########################
Last run ended with [1, 1, 1, 5, 0, 0, 3] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 1, 1, 5, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.06s

Elapsed time: 9.97s

#########################
Last run ended with [1, 1, 1, 5, 0, 1, 0] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 1, 1, 5, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.09s

Elapsed time: 9.99s

#########################
Last run ended with [1, 1, 1, 5, 0, 1, 1] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 1, 1, 5, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.09s

Elapsed time: 10.02s

#########################
Last run ended with [1, 1, 1, 5, 0, 1, 2] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 1, 1, 5, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.09s

Elapsed time: 10.02s

#########################
Last run ended with [1, 1, 1, 5, 0, 1, 3] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 1, 1, 5, 1, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.27s

Elapsed time: 10.17s

#########################
Last run ended with [1, 1, 1, 5, 1, 0, 0] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 1, 1, 5, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.21s

Elapsed time: 10.12s

#########################
Last run ended with [1, 1, 1, 5, 1, 0, 1] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 1, 1, 5, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.23s

Elapsed time: 10.14s

#########################
Last run ended with [1, 1, 1, 5, 1, 0, 2] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 1, 1, 5, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.22s

Elapsed time: 10.12s

#########################
Last run ended with [1, 1, 1, 5, 1, 0, 3] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 1, 1, 5, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.2s

Elapsed time: 10.11s

#########################
Last run ended with [1, 1, 1, 5, 1, 1, 0] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 1, 1, 5, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.13s

Elapsed time: 10.05s

#########################
Last run ended with [1, 1, 1, 5, 1, 1, 1] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 1, 1, 5, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.12s

Elapsed time: 10.03s

#########################
Last run ended with [1, 1, 1, 5, 1, 1, 2] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 1, 1, 5, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.16s

Elapsed time: 10.07s

#########################
Last run ended with [1, 1, 1, 5, 1, 1, 3] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [2, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.23s

Elapsed time: 7.14s

#########################
Last run ended with [2, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 5.
Moving to next run [2, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.2s

Elapsed time: 7.11s

#########################
Last run ended with [2, 0, 0, 1] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 6.
Moving to next run [2, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.19s

Elapsed time: 7.09s

#########################
Last run ended with [2, 0, 0, 2] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 7.
Moving to next run [2, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.22s

Elapsed time: 7.12s

#########################
Last run ended with [2, 0, 0, 3] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 8.
Moving to next run [2, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '4'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.21s

Elapsed time: 7.12s

#########################
Last run ended with [2, 0, 0, 4] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 9.
Moving to next run [2, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.22s

Elapsed time: 7.13s

#########################
Last run ended with [2, 0, 0, 5] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 10.
Moving to next run [2, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.2s

Elapsed time: 7.11s

#########################
Last run ended with [2, 0, 1, 0] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 5.
Moving to next run [2, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.22s

Elapsed time: 7.13s

#########################
Last run ended with [2, 0, 1, 1] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 6.
Moving to next run [2, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.19s

Elapsed time: 7.09s

#########################
Last run ended with [2, 0, 1, 2] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 7.
Moving to next run [2, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.17s

Elapsed time: 7.09s

#########################
Last run ended with [2, 0, 1, 3] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 8.
Moving to next run [2, 0, 1, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '4'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.19s

Elapsed time: 7.09s

#########################
Last run ended with [2, 0, 1, 4] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 9.
Moving to next run [2, 0, 1, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.2s

Elapsed time: 7.09s

#########################
Last run ended with [2, 0, 1, 5] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 10.
Moving to next run [2, 1, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.19s

Elapsed time: 7.13s

#########################
Last run ended with [2, 1, 0, 0] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 5.
Moving to next run [2, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.25s

Elapsed time: 7.2s

#########################
Last run ended with [2, 1, 0, 1] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 6.
Moving to next run [2, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.27s

Elapsed time: 7.2s

#########################
Last run ended with [2, 1, 0, 2] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 7.
Moving to next run [2, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.21s

Elapsed time: 7.14s

#########################
Last run ended with [2, 1, 0, 3] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 8.
Moving to next run [2, 1, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '4'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.25s

Elapsed time: 7.14s

#########################
Last run ended with [2, 1, 0, 4] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 9.
Moving to next run [2, 1, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.21s

Elapsed time: 7.11s

#########################
Last run ended with [2, 1, 0, 5] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 10.
Moving to next run [2, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.21s

Elapsed time: 7.12s

#########################
Last run ended with [2, 1, 1, 0] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 5.
Moving to next run [2, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.2s

Elapsed time: 7.13s

#########################
Last run ended with [2, 1, 1, 1] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 6.
Moving to next run [2, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.16s

Elapsed time: 7.1s

#########################
Last run ended with [2, 1, 1, 2] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 7.
Moving to next run [2, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.25s

Elapsed time: 7.17s

#########################
Last run ended with [2, 1, 1, 3] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 8.
Moving to next run [2, 1, 1, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '4'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.18s

Elapsed time: 7.09s

#########################
Last run ended with [2, 1, 1, 4] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 9.
Moving to next run [2, 1, 1, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.18s

Elapsed time: 7.1s

#########################
Last run ended with [2, 1, 1, 5] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 10.
Moving to next run None
#########################
[2, 1, 0, 1, 1, 1, 3]

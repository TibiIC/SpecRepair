Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.53s

Elapsed time: 21.91s

Elapsed time: 28.94s

#########################
First run ended with [0, 0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.53s

Elapsed time: 21.89s

Elapsed time: 28.21s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.66s

Elapsed time: 31.06s

Elapsed time: 37.42s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.74s

Elapsed time: 31.09s

Elapsed time: 37.43s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.14s

Elapsed time: 31.52s

Elapsed time: 37.83s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.65s

Elapsed time: 31.1s

Elapsed time: 37.48s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.63s

Elapsed time: 31.01s

Elapsed time: 37.33s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.6s

Elapsed time: 30.94s

Elapsed time: 37.27s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.62s

Elapsed time: 31.03s

Elapsed time: 37.36s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.63s

Elapsed time: 30.96s

Elapsed time: 37.3s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.62s

Elapsed time: 30.99s

Elapsed time: 37.3s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.72s

Elapsed time: 31.09s

Elapsed time: 37.41s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.69s

Elapsed time: 31.05s

Elapsed time: 37.41s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.73s

Elapsed time: 31.13s

Elapsed time: 37.45s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.66s

Elapsed time: 31.01s

Elapsed time: 37.42s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.84s

Elapsed time: 31.25s

Elapsed time: 37.6s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.71s

Elapsed time: 31.06s

Elapsed time: 37.38s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.69s

Elapsed time: 31.05s

Elapsed time: 37.36s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.65s

Elapsed time: 31.02s

Elapsed time: 37.34s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.67s

Elapsed time: 31.01s

Elapsed time: 37.33s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.05s

Elapsed time: 30.41s

Elapsed time: 36.71s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.07s

Elapsed time: 30.41s

Elapsed time: 36.73s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.11s

Elapsed time: 30.49s

Elapsed time: 36.82s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.14s

Elapsed time: 30.64s

Elapsed time: 37.25s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.13s

Elapsed time: 30.52s

Elapsed time: 36.89s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.01s

Elapsed time: 30.37s

Elapsed time: 36.73s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.64s

Elapsed time: 21.97s

Elapsed time: 28.33s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.67s

Elapsed time: 22.03s

Elapsed time: 28.34s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 0, 0, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.72s

Elapsed time: 22.08s

Elapsed time: 28.45s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.63s

Elapsed time: 22.12s

Elapsed time: 28.57s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.5s

Elapsed time: 21.87s

Elapsed time: 28.22s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.04s

Elapsed time: 31.39s

Elapsed time: 37.72s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.64s

Elapsed time: 31.02s

Elapsed time: 37.33s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.85s

Elapsed time: 31.21s

Elapsed time: 37.55s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.61s

Elapsed time: 30.99s

Elapsed time: 37.31s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.6s

Elapsed time: 30.94s

Elapsed time: 37.27s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.91s

Elapsed time: 31.28s

Elapsed time: 37.63s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.69s

Elapsed time: 32.51s

Elapsed time: 38.92s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.5s

Elapsed time: 32.22s

Elapsed time: 38.88s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.08s

Elapsed time: 31.52s

Elapsed time: 37.88s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.0s

Elapsed time: 31.71s

Elapsed time: 38.21s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.69s

Elapsed time: 31.1s

Elapsed time: 37.46s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.66s

Elapsed time: 31.04s

Elapsed time: 37.38s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.65s

Elapsed time: 31.02s

Elapsed time: 37.4s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.65s

Elapsed time: 31.03s

Elapsed time: 37.36s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.66s

Elapsed time: 31.02s

Elapsed time: 37.34s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.67s

Elapsed time: 31.08s

Elapsed time: 37.38s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.75s

Elapsed time: 31.2s

Elapsed time: 37.6s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.75s

Elapsed time: 31.16s

Elapsed time: 37.51s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.07s

Elapsed time: 30.49s

Elapsed time: 36.84s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.07s

Elapsed time: 30.47s

Elapsed time: 36.82s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.09s

Elapsed time: 30.51s

Elapsed time: 36.85s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.13s

Elapsed time: 30.51s

Elapsed time: 36.84s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.07s

Elapsed time: 30.45s

Elapsed time: 36.81s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.13s

Elapsed time: 30.51s

Elapsed time: 36.84s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.64s

Elapsed time: 22.04s

Elapsed time: 28.39s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.62s

Elapsed time: 22.0s

Elapsed time: 28.33s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 0, 1, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.63s

Elapsed time: 21.99s

Elapsed time: 28.31s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.44s

Elapsed time: 21.83s

Elapsed time: 28.16s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.47s

Elapsed time: 21.85s

Elapsed time: 28.19s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.58s

Elapsed time: 30.95s

Elapsed time: 37.31s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.64s

Elapsed time: 31.01s

Elapsed time: 37.36s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.61s

Elapsed time: 31.04s

Elapsed time: 37.51s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.67s

Elapsed time: 31.05s

Elapsed time: 37.4s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.64s

Elapsed time: 31.01s

Elapsed time: 37.36s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.63s

Elapsed time: 31.01s

Elapsed time: 37.36s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.58s

Elapsed time: 30.98s

Elapsed time: 37.3s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.61s

Elapsed time: 30.99s

Elapsed time: 37.32s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.59s

Elapsed time: 30.99s

Elapsed time: 37.33s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.72s

Elapsed time: 31.11s

Elapsed time: 37.49s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.68s

Elapsed time: 31.08s

Elapsed time: 37.43s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.66s

Elapsed time: 31.05s

Elapsed time: 37.52s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.71s

Elapsed time: 31.08s

Elapsed time: 37.42s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.69s

Elapsed time: 31.07s

Elapsed time: 37.46s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.81s

Elapsed time: 31.19s

Elapsed time: 37.57s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.65s

Elapsed time: 31.03s

Elapsed time: 37.42s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.79s

Elapsed time: 31.18s

Elapsed time: 37.5s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.72s

Elapsed time: 31.13s

Elapsed time: 37.49s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.12s

Elapsed time: 30.5s

Elapsed time: 36.89s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 23.99s

Elapsed time: 30.38s

Elapsed time: 36.72s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 23.99s

Elapsed time: 30.35s

Elapsed time: 36.68s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 1, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.27s

Elapsed time: 30.68s

Elapsed time: 36.99s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 1, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 1, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.02s

Elapsed time: 30.38s

Elapsed time: 36.72s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 1, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 1, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.18s

Elapsed time: 30.57s

Elapsed time: 36.87s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 1, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.67s

Elapsed time: 22.08s

Elapsed time: 28.42s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.64s

Elapsed time: 22.01s

Elapsed time: 28.37s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 1, 0, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.63s

Elapsed time: 22.04s

Elapsed time: 28.38s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.59s

Elapsed time: 22.0s

Elapsed time: 28.37s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.52s

Elapsed time: 23.37s

Elapsed time: 29.87s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.51s

Elapsed time: 32.12s

Elapsed time: 38.58s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.41s

Elapsed time: 31.89s

Elapsed time: 38.32s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 26.28s

Elapsed time: 33.1s

Elapsed time: 39.91s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 26.42s

Elapsed time: 33.23s

Elapsed time: 40.03s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 26.4s

Elapsed time: 33.15s

Elapsed time: 39.95s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 26.52s

Elapsed time: 33.38s

Elapsed time: 40.16s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 26.51s

Elapsed time: 33.34s

Elapsed time: 40.19s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 26.23s

Elapsed time: 33.04s

Elapsed time: 39.81s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 26.32s

Elapsed time: 33.14s

Elapsed time: 39.88s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 26.19s

Elapsed time: 32.91s

Elapsed time: 39.6s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 26.13s

Elapsed time: 32.87s

Elapsed time: 39.6s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 26.18s

Elapsed time: 32.92s

Elapsed time: 39.67s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 26.22s

Elapsed time: 32.97s

Elapsed time: 39.69s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 26.0s

Elapsed time: 32.83s

Elapsed time: 39.57s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 26.03s

Elapsed time: 32.69s

Elapsed time: 39.35s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 26.19s

Elapsed time: 33.06s

Elapsed time: 39.83s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 26.41s

Elapsed time: 33.22s

Elapsed time: 40.21s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 26.31s

Elapsed time: 33.1s

Elapsed time: 39.84s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 1, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.55s

Elapsed time: 32.35s

Elapsed time: 39.13s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 1, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 1, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.68s

Elapsed time: 32.49s

Elapsed time: 39.28s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 1, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 1, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 26.11s

Elapsed time: 33.01s

Elapsed time: 39.9s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 1, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 1, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.62s

Elapsed time: 32.42s

Elapsed time: 39.23s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 1, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 1, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.58s

Elapsed time: 32.32s

Elapsed time: 38.89s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 1, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 1, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.6s

Elapsed time: 32.36s

Elapsed time: 39.09s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 1, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.66s

Elapsed time: 23.41s

Elapsed time: 30.16s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.72s

Elapsed time: 23.47s

Elapsed time: 30.24s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 1, 1, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.53s

Elapsed time: 23.28s

Elapsed time: 30.03s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.5s

Elapsed time: 23.25s

#########################
Last run ended with [0, 1, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.56s

Elapsed time: 23.38s

#########################
Last run ended with [0, 1, 0, 0, 1] and max_options=[2, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.28s

Elapsed time: 31.88s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 0, 0, 0, 0] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.28s

Elapsed time: 32.02s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 0, 0, 0, 1] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.4s

Elapsed time: 31.78s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 0, 0, 0, 2] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 0, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.69s

Elapsed time: 32.04s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 0, 0, 0, 3] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 0, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.09s

Elapsed time: 31.71s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 0, 0, 0, 4] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 0, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.8s

Elapsed time: 31.15s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 0, 0, 0, 5] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 0, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.79s

Elapsed time: 31.14s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 0, 0, 0, 6] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 0, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.93s

Elapsed time: 31.36s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 0, 0, 0, 7] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 0, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.68s

Elapsed time: 31.06s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 0, 0, 0, 8] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.72s

Elapsed time: 31.12s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 1, 0, 0, 0] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.03s

Elapsed time: 31.39s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 1, 0, 0, 1] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.0s

Elapsed time: 31.33s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 1, 0, 0, 2] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 1, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.77s

Elapsed time: 31.08s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 1, 0, 0, 3] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 1, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.69s

Elapsed time: 31.12s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 1, 0, 0, 4] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 1, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.59s

Elapsed time: 30.91s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 1, 0, 0, 5] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 1, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.6s

Elapsed time: 30.92s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 1, 0, 0, 6] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 1, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.6s

Elapsed time: 30.94s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 1, 0, 0, 7] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 1, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.75s

Elapsed time: 31.09s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 1, 0, 0, 8] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 1, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.17s

Elapsed time: 30.54s

#########################
Last run ended with [0, 1, 0, 0, 2, 1, 0, 0, 0, 0] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 1, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.28s

Elapsed time: 30.67s

#########################
Last run ended with [0, 1, 0, 0, 2, 1, 0, 0, 0, 1] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 1, 0, 0, 2, 1, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.2s

Elapsed time: 30.54s

#########################
Last run ended with [0, 1, 0, 0, 2, 1, 0, 0, 0, 2] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 1, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.05s

Elapsed time: 30.37s

#########################
Last run ended with [0, 1, 0, 0, 2, 1, 1, 0, 0, 0] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 1, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.47s

Elapsed time: 30.97s

#########################
Last run ended with [0, 1, 0, 0, 2, 1, 1, 0, 0, 1] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 1, 0, 0, 2, 1, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.1s

Elapsed time: 30.46s

#########################
Last run ended with [0, 1, 0, 0, 2, 1, 1, 0, 0, 2] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 1, 0, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.61s

Elapsed time: 21.96s

#########################
Last run ended with [0, 1, 1, 0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.54s

Elapsed time: 21.84s

#########################
Last run ended with [0, 1, 1, 0, 1] and max_options=[2, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 1, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.77s

Elapsed time: 22.14s

#########################
Last run ended with [0, 1, 1, 0, 2] and max_options=[2, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.59s

Elapsed time: 22.06s

Elapsed time: 28.55s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.69s

Elapsed time: 22.12s

Elapsed time: 28.55s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.92s

Elapsed time: 31.38s

Elapsed time: 37.76s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.88s

Elapsed time: 31.33s

Elapsed time: 37.75s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.84s

Elapsed time: 31.23s

Elapsed time: 37.59s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.02s

Elapsed time: 31.42s

Elapsed time: 37.75s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.81s

Elapsed time: 31.27s

Elapsed time: 37.74s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.7s

Elapsed time: 31.11s

Elapsed time: 37.49s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.95s

Elapsed time: 31.38s

Elapsed time: 37.75s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.84s

Elapsed time: 31.26s

Elapsed time: 37.65s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.75s

Elapsed time: 31.19s

Elapsed time: 37.62s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.94s

Elapsed time: 31.39s

Elapsed time: 37.82s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.73s

Elapsed time: 31.09s

Elapsed time: 37.51s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.81s

Elapsed time: 31.2s

Elapsed time: 37.54s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.69s

Elapsed time: 31.09s

Elapsed time: 37.52s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.9s

Elapsed time: 31.33s

Elapsed time: 37.73s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.87s

Elapsed time: 31.24s

Elapsed time: 37.62s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.6s

Elapsed time: 31.02s

Elapsed time: 37.49s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.58s

Elapsed time: 30.93s

Elapsed time: 37.24s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.51s

Elapsed time: 30.85s

Elapsed time: 37.16s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 23.99s

Elapsed time: 30.34s

Elapsed time: 36.65s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.0s

Elapsed time: 30.34s

Elapsed time: 36.66s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.09s

Elapsed time: 30.43s

Elapsed time: 36.76s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.04s

Elapsed time: 30.41s

Elapsed time: 36.8s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.14s

Elapsed time: 30.52s

Elapsed time: 36.88s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.01s

Elapsed time: 30.42s

Elapsed time: 36.86s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.74s

Elapsed time: 22.14s

Elapsed time: 28.47s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.71s

Elapsed time: 22.15s

Elapsed time: 28.55s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 0, 0, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.69s

Elapsed time: 22.11s

Elapsed time: 28.52s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.46s

Elapsed time: 21.81s

Elapsed time: 28.13s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.44s

Elapsed time: 21.81s

Elapsed time: 28.13s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.58s

Elapsed time: 30.95s

Elapsed time: 37.27s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.68s

Elapsed time: 31.05s

Elapsed time: 37.37s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.58s

Elapsed time: 30.95s

Elapsed time: 37.27s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.61s

Elapsed time: 31.01s

Elapsed time: 37.34s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.83s

Elapsed time: 31.16s

Elapsed time: 37.49s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.69s

Elapsed time: 31.09s

Elapsed time: 37.47s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.64s

Elapsed time: 31.0s

Elapsed time: 37.34s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.65s

Elapsed time: 31.01s

Elapsed time: 37.34s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.65s

Elapsed time: 31.0s

Elapsed time: 37.34s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.63s

Elapsed time: 31.02s

Elapsed time: 37.35s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.67s

Elapsed time: 31.04s

Elapsed time: 37.39s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.63s

Elapsed time: 30.99s

Elapsed time: 37.32s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.66s

Elapsed time: 31.01s

Elapsed time: 37.33s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.67s

Elapsed time: 31.04s

Elapsed time: 37.41s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.59s

Elapsed time: 30.95s

Elapsed time: 37.28s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.6s

Elapsed time: 30.97s

Elapsed time: 37.29s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.68s

Elapsed time: 31.04s

Elapsed time: 37.42s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.86s

Elapsed time: 31.27s

Elapsed time: 37.61s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.31s

Elapsed time: 30.71s

Elapsed time: 37.09s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.41s

Elapsed time: 30.87s

Elapsed time: 37.29s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.12s

Elapsed time: 30.5s

Elapsed time: 36.93s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.04s

Elapsed time: 30.4s

Elapsed time: 36.7s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.38s

Elapsed time: 30.78s

Elapsed time: 37.1s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.46s

Elapsed time: 30.9s

Elapsed time: 37.31s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.68s

Elapsed time: 22.06s

Elapsed time: 28.4s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.62s

Elapsed time: 21.98s

Elapsed time: 28.3s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 0, 1, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.56s

Elapsed time: 21.92s

Elapsed time: 28.25s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.45s

Elapsed time: 21.81s

Elapsed time: 28.12s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.39s

Elapsed time: 21.73s

Elapsed time: 28.04s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.55s

Elapsed time: 30.9s

Elapsed time: 37.23s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.59s

Elapsed time: 30.94s

Elapsed time: 37.27s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.88s

Elapsed time: 31.22s

Elapsed time: 37.53s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.71s

Elapsed time: 31.1s

Elapsed time: 37.49s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.63s

Elapsed time: 31.07s

Elapsed time: 37.41s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.58s

Elapsed time: 30.94s

Elapsed time: 37.28s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.6s

Elapsed time: 30.95s

Elapsed time: 37.28s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.57s

Elapsed time: 30.94s

Elapsed time: 37.26s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.54s

Elapsed time: 30.9s

Elapsed time: 37.24s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.6s

Elapsed time: 30.95s

Elapsed time: 37.27s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.78s

Elapsed time: 31.15s

Elapsed time: 37.47s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.7s

Elapsed time: 31.06s

Elapsed time: 37.41s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.75s

Elapsed time: 31.14s

Elapsed time: 37.48s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.71s

Elapsed time: 31.08s

Elapsed time: 37.44s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.61s

Elapsed time: 31.0s

Elapsed time: 37.34s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.6s

Elapsed time: 30.96s

Elapsed time: 37.27s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.55s

Elapsed time: 31.03s

Elapsed time: 37.33s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.55s

Elapsed time: 30.91s

Elapsed time: 37.22s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.15s

Elapsed time: 30.49s

Elapsed time: 36.81s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.1s

Elapsed time: 30.58s

Elapsed time: 36.92s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 23.98s

Elapsed time: 30.35s

Elapsed time: 36.66s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 1, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.0s

Elapsed time: 30.38s

Elapsed time: 36.7s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 1, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 1, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 23.98s

Elapsed time: 30.31s

Elapsed time: 36.62s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 1, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 1, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 23.99s

Elapsed time: 30.37s

Elapsed time: 36.71s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 1, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.62s

Elapsed time: 22.02s

Elapsed time: 28.37s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.6s

Elapsed time: 21.97s

Elapsed time: 28.34s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 1, 0, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.58s

Elapsed time: 21.95s

Elapsed time: 28.28s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.5s

Elapsed time: 21.86s

Elapsed time: 28.19s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.45s

Elapsed time: 21.84s

Elapsed time: 28.19s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.02s

Elapsed time: 31.4s

Elapsed time: 37.72s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.81s

Elapsed time: 31.2s

Elapsed time: 37.62s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.15s

Elapsed time: 31.56s

Elapsed time: 37.93s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.6s

Elapsed time: 30.97s

Elapsed time: 37.35s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.65s

Elapsed time: 31.04s

Elapsed time: 37.37s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.92s

Elapsed time: 31.43s

Elapsed time: 37.84s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.6s

Elapsed time: 30.95s

Elapsed time: 37.34s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.69s

Elapsed time: 31.04s

Elapsed time: 37.38s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.62s

Elapsed time: 30.98s

Elapsed time: 37.32s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.52s

Elapsed time: 30.88s

Elapsed time: 37.26s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.75s

Elapsed time: 31.1s

Elapsed time: 37.41s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.97s

Elapsed time: 31.56s

Elapsed time: 37.94s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.94s

Elapsed time: 31.51s

Elapsed time: 37.94s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.92s

Elapsed time: 31.38s

Elapsed time: 37.74s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.95s

Elapsed time: 31.4s

Elapsed time: 37.85s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.89s

Elapsed time: 31.33s

Elapsed time: 37.77s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.85s

Elapsed time: 31.24s

Elapsed time: 37.75s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.85s

Elapsed time: 31.34s

Elapsed time: 37.79s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 1, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.42s

Elapsed time: 30.97s

Elapsed time: 37.32s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 1, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 1, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.32s

Elapsed time: 30.83s

Elapsed time: 37.47s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 1, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 1, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.24s

Elapsed time: 30.6s

Elapsed time: 37.04s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 1, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 1, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.2s

Elapsed time: 30.57s

Elapsed time: 36.89s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 1, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 1, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.18s

Elapsed time: 30.56s

Elapsed time: 36.91s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 1, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 1, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.11s

Elapsed time: 30.49s

Elapsed time: 36.84s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 1, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.76s

Elapsed time: 22.21s

Elapsed time: 28.57s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.06s

Elapsed time: 22.5s

Elapsed time: 28.95s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 1, 1, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.73s

Elapsed time: 22.17s

Elapsed time: 28.59s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.58s

Elapsed time: 21.97s

#########################
Last run ended with [1, 1, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.53s

Elapsed time: 21.89s

#########################
Last run ended with [1, 1, 0, 0, 1] and max_options=[2, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.94s

Elapsed time: 31.35s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 0, 0, 0, 0] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.81s

Elapsed time: 31.26s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 0, 0, 0, 1] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.89s

Elapsed time: 31.25s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 0, 0, 0, 2] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 0, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.32s

Elapsed time: 31.66s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 0, 0, 0, 3] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 0, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.58s

Elapsed time: 32.35s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 0, 0, 0, 4] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 0, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.15s

Elapsed time: 31.63s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 0, 0, 0, 5] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 0, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.88s

Elapsed time: 31.29s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 0, 0, 0, 6] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 0, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.17s

Elapsed time: 31.54s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 0, 0, 0, 7] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 0, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.95s

Elapsed time: 31.51s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 0, 0, 0, 8] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.44s

Elapsed time: 32.1s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 1, 0, 0, 0] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.24s

Elapsed time: 31.64s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 1, 0, 0, 1] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.41s

Elapsed time: 31.88s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 1, 0, 0, 2] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 1, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.74s

Elapsed time: 32.62s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 1, 0, 0, 3] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 1, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.16s

Elapsed time: 31.79s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 1, 0, 0, 4] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 1, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.66s

Elapsed time: 32.17s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 1, 0, 0, 5] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 1, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.07s

Elapsed time: 31.54s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 1, 0, 0, 6] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 1, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.31s

Elapsed time: 31.93s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 1, 0, 0, 7] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 1, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.22s

Elapsed time: 31.82s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 1, 0, 0, 8] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 1, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.81s

Elapsed time: 31.17s

#########################
Last run ended with [1, 1, 0, 0, 2, 1, 0, 0, 0, 0] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 1, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.02s

Elapsed time: 30.33s

#########################
Last run ended with [1, 1, 0, 0, 2, 1, 0, 0, 0, 1] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 1, 0, 0, 2, 1, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.78s

Elapsed time: 31.11s

#########################
Last run ended with [1, 1, 0, 0, 2, 1, 0, 0, 0, 2] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 1, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.5s

Elapsed time: 31.81s

#########################
Last run ended with [1, 1, 0, 0, 2, 1, 1, 0, 0, 0] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 1, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.01s

Elapsed time: 30.34s

#########################
Last run ended with [1, 1, 0, 0, 2, 1, 1, 0, 0, 1] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 1, 0, 0, 2, 1, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.05s

Elapsed time: 30.44s

#########################
Last run ended with [1, 1, 0, 0, 2, 1, 1, 0, 0, 2] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.65s

Elapsed time: 21.99s

#########################
Last run ended with [1, 1, 1, 0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.64s

Elapsed time: 22.03s

#########################
Last run ended with [1, 1, 1, 0, 1] and max_options=[2, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 1, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.67s

Elapsed time: 22.74s

#########################
Last run ended with [1, 1, 1, 0, 2] and max_options=[2, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [2, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.85s

Elapsed time: 22.2s

#########################
Last run ended with [2, 0, 0, 0, 0] and max_options=[2, 1, 1, 0, 2].
This run is Alternative Realizable Specification Produced..
Moving to next run [2, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.77s

Elapsed time: 22.11s

#########################
Last run ended with [2, 0, 0, 0, 1] and max_options=[2, 1, 1, 0, 2].
This run is Alternative Realizable Specification Produced..
Moving to next run [2, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.78s

Elapsed time: 22.19s

#########################
Last run ended with [2, 0, 0, 0, 2] and max_options=[2, 1, 1, 0, 2].
This run is Alternative Realizable Specification Produced..
Moving to next run [2, 0, 1, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.82s

Elapsed time: 22.18s

#########################
Last run ended with [2, 0, 1, 0, 0] and max_options=[2, 1, 1, 0, 2].
This run is Alternative Realizable Specification Produced..
Moving to next run [2, 0, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.76s

Elapsed time: 22.13s

#########################
Last run ended with [2, 0, 1, 0, 1] and max_options=[2, 1, 1, 0, 2].
This run is Alternative Realizable Specification Produced..
Moving to next run [2, 0, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.76s

Elapsed time: 22.12s

#########################
Last run ended with [2, 0, 1, 0, 2] and max_options=[2, 1, 1, 0, 2].
This run is Alternative Realizable Specification Produced..
Moving to next run [2, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.73s

Elapsed time: 22.08s

#########################
Last run ended with [2, 1, 0, 0, 0] and max_options=[2, 1, 1, 0, 2].
This run is Alternative Realizable Specification Produced..
Moving to next run [2, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.8s

Elapsed time: 22.15s

#########################
Last run ended with [2, 1, 0, 0, 1] and max_options=[2, 1, 1, 0, 2].
This run is Alternative Realizable Specification Produced..
Moving to next run [2, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.81s

Elapsed time: 22.15s

#########################
Last run ended with [2, 1, 0, 0, 2] and max_options=[2, 1, 1, 0, 2].
This run is Alternative Realizable Specification Produced..
Moving to next run [2, 1, 1, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.74s

Elapsed time: 22.11s

#########################
Last run ended with [2, 1, 1, 0, 0] and max_options=[2, 1, 1, 0, 2].
This run is Alternative Realizable Specification Produced..
Moving to next run [2, 1, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.78s

Elapsed time: 22.16s

#########################
Last run ended with [2, 1, 1, 0, 1] and max_options=[2, 1, 1, 0, 2].
This run is Alternative Realizable Specification Produced..
Moving to next run [2, 1, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.81s

Elapsed time: 22.15s

#########################
Last run ended with [2, 1, 1, 0, 2] and max_options=[2, 1, 1, 0, 2].
This run is Alternative Realizable Specification Produced..
Moving to next run None
#########################
[2, 1, 0, 1, 1, 1, 0, 2]

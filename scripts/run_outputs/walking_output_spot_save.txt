Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 18.63s

Elapsed time: 26.49s

Elapsed time: 34.1s

#########################
First run ended with [0, 0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 18.43s

Elapsed time: 26.03s

Elapsed time: 33.59s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 29.41s

Elapsed time: 37.0s

Elapsed time: 44.55s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 29.3s

Elapsed time: 36.89s

Elapsed time: 44.44s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 29.29s

Elapsed time: 36.98s

Elapsed time: 44.52s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 29.35s

Elapsed time: 36.91s

Elapsed time: 44.46s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 29.35s

Elapsed time: 36.92s

Elapsed time: 44.48s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 29.33s

Elapsed time: 36.93s

Elapsed time: 44.47s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 29.29s

Elapsed time: 36.88s

Elapsed time: 44.43s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 29.32s

Elapsed time: 36.88s

Elapsed time: 44.41s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 29.36s

Elapsed time: 36.93s

Elapsed time: 44.48s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 29.33s

Elapsed time: 36.9s

Elapsed time: 44.46s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 29.32s

Elapsed time: 36.91s

Elapsed time: 44.44s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 29.3s

Elapsed time: 36.86s

Elapsed time: 44.4s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 29.32s

Elapsed time: 36.88s

Elapsed time: 44.41s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 29.31s

Elapsed time: 36.87s

Elapsed time: 44.39s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 29.41s

Elapsed time: 36.99s

Elapsed time: 44.54s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 29.36s

Elapsed time: 36.94s

Elapsed time: 44.51s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 29.36s

Elapsed time: 36.97s

Elapsed time: 44.54s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 29.38s

Elapsed time: 36.97s

Elapsed time: 44.51s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 28.61s

Elapsed time: 36.17s

Elapsed time: 43.76s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 28.55s

Elapsed time: 36.12s

Elapsed time: 43.64s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 28.62s

Elapsed time: 36.22s

Elapsed time: 43.75s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 28.55s

Elapsed time: 36.1s

Elapsed time: 43.63s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 28.57s

Elapsed time: 36.14s

Elapsed time: 43.7s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 28.61s

Elapsed time: 36.17s

Elapsed time: 43.7s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 18.6s

Elapsed time: 26.17s

Elapsed time: 33.71s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 0, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 18.58s

Elapsed time: 26.16s

Elapsed time: 33.73s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 0, 0, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 18.61s

Elapsed time: 26.19s

Elapsed time: 33.74s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 18.42s

Elapsed time: 26.01s

Elapsed time: 33.55s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 18.43s

Elapsed time: 26.02s

Elapsed time: 33.56s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 29.27s

Elapsed time: 36.84s

Elapsed time: 44.37s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 29.27s

Elapsed time: 36.85s

Elapsed time: 44.38s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 29.36s

Elapsed time: 37.09s

Elapsed time: 44.71s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.24s

Elapsed time: 31.67s

Elapsed time: 38.61s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.14s

Elapsed time: 31.73s

Elapsed time: 38.44s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.36s

Elapsed time: 31.73s

Elapsed time: 38.09s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.4s

Elapsed time: 32.03s

Elapsed time: 38.67s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.21s

Elapsed time: 31.6s

Elapsed time: 37.98s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.25s

Elapsed time: 31.77s

Elapsed time: 38.37s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.39s

Elapsed time: 31.82s

Elapsed time: 38.29s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.03s

Elapsed time: 31.52s

Elapsed time: 37.94s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.66s

Elapsed time: 31.01s

Elapsed time: 37.45s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.66s

Elapsed time: 31.02s

Elapsed time: 37.4s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.93s

Elapsed time: 31.28s

Elapsed time: 37.57s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 26.2s

Elapsed time: 32.85s

Elapsed time: 39.36s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.88s

Elapsed time: 32.4s

Elapsed time: 38.89s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.59s

Elapsed time: 32.31s

Elapsed time: 38.94s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.09s

Elapsed time: 31.59s

Elapsed time: 38.09s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.05s

Elapsed time: 30.43s

Elapsed time: 36.79s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.21s

Elapsed time: 30.62s

Elapsed time: 36.99s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.13s

Elapsed time: 30.5s

Elapsed time: 36.85s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.12s

Elapsed time: 30.52s

Elapsed time: 36.87s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.07s

Elapsed time: 30.46s

Elapsed time: 36.82s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.05s

Elapsed time: 30.44s

Elapsed time: 36.79s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.69s

Elapsed time: 22.09s

Elapsed time: 28.45s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 0, 1, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.66s

Elapsed time: 22.06s

Elapsed time: 28.42s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 0, 1, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.76s

Elapsed time: 22.25s

Elapsed time: 28.62s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.59s

Elapsed time: 21.99s

Elapsed time: 28.34s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.66s

Elapsed time: 22.39s

Elapsed time: 28.99s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.56s

Elapsed time: 30.93s

Elapsed time: 37.26s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.55s

Elapsed time: 30.89s

Elapsed time: 37.2s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.6s

Elapsed time: 30.96s

Elapsed time: 37.29s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.28s

Elapsed time: 31.65s

Elapsed time: 37.95s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.58s

Elapsed time: 30.95s

Elapsed time: 37.27s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.61s

Elapsed time: 30.99s

Elapsed time: 37.39s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.62s

Elapsed time: 31.01s

Elapsed time: 37.32s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.61s

Elapsed time: 31.01s

Elapsed time: 37.35s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.62s

Elapsed time: 31.03s

Elapsed time: 37.38s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.6s

Elapsed time: 30.98s

Elapsed time: 37.32s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.74s

Elapsed time: 31.11s

Elapsed time: 37.45s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.62s

Elapsed time: 31.02s

Elapsed time: 37.36s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.6s

Elapsed time: 31.0s

Elapsed time: 37.33s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.64s

Elapsed time: 31.0s

Elapsed time: 37.33s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.66s

Elapsed time: 31.09s

Elapsed time: 37.42s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.72s

Elapsed time: 31.09s

Elapsed time: 37.41s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.69s

Elapsed time: 31.06s

Elapsed time: 37.38s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.66s

Elapsed time: 31.02s

Elapsed time: 37.35s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.02s

Elapsed time: 30.4s

Elapsed time: 36.75s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.03s

Elapsed time: 30.43s

Elapsed time: 36.74s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.08s

Elapsed time: 30.46s

Elapsed time: 36.79s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 1, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.06s

Elapsed time: 30.45s

Elapsed time: 36.76s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 1, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 1, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.03s

Elapsed time: 30.39s

Elapsed time: 36.72s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 1, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 1, 0, 0, 0, 2, 1, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.03s

Elapsed time: 30.4s

Elapsed time: 36.72s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 2, 1, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.61s

Elapsed time: 22.0s

Elapsed time: 28.34s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 0, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.6s

Elapsed time: 22.0s

Elapsed time: 28.33s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 1, 0, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.6s

Elapsed time: 21.96s

Elapsed time: 28.29s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.45s

Elapsed time: 21.85s

Elapsed time: 28.16s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.49s

Elapsed time: 21.84s

Elapsed time: 28.17s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.71s

Elapsed time: 31.1s

Elapsed time: 37.51s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.72s

Elapsed time: 31.11s

Elapsed time: 37.46s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.9s

Elapsed time: 31.28s

Elapsed time: 37.61s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.02s

Elapsed time: 31.45s

Elapsed time: 37.84s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.42s

Elapsed time: 32.09s

Elapsed time: 38.52s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 26.07s

Elapsed time: 32.51s

Elapsed time: 39.02s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.11s

Elapsed time: 31.65s

Elapsed time: 38.29s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.64s

Elapsed time: 32.21s

Elapsed time: 38.68s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.83s

Elapsed time: 31.27s

Elapsed time: 37.63s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.95s

Elapsed time: 31.59s

Elapsed time: 38.18s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.3s

Elapsed time: 31.86s

Elapsed time: 38.27s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.87s

Elapsed time: 31.41s

Elapsed time: 37.77s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.97s

Elapsed time: 31.34s

Elapsed time: 37.69s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.41s

Elapsed time: 31.84s

Elapsed time: 38.28s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.93s

Elapsed time: 31.4s

Elapsed time: 37.82s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.43s

Elapsed time: 32.01s

Elapsed time: 38.52s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.09s

Elapsed time: 31.58s

Elapsed time: 38.09s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.0s

Elapsed time: 31.48s

Elapsed time: 37.89s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 1, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.75s

Elapsed time: 31.25s

Elapsed time: 37.81s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 1, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 1, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.76s

Elapsed time: 31.32s

Elapsed time: 37.87s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 1, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 1, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.68s

Elapsed time: 31.24s

Elapsed time: 37.78s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 1, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 1, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.72s

Elapsed time: 31.26s

Elapsed time: 37.81s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 1, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 1, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.8s

Elapsed time: 31.43s

Elapsed time: 37.98s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 1, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 1, 1, 0, 0, 2, 1, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.78s

Elapsed time: 31.37s

Elapsed time: 37.97s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 2, 1, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.02s

Elapsed time: 22.63s

Elapsed time: 29.12s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 0, 0, 1, 1, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.06s

Elapsed time: 22.61s

Elapsed time: 29.19s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 0, 0, 1, 1, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.14s

Elapsed time: 22.71s

Elapsed time: 29.17s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.49s

Elapsed time: 23.07s

#########################
Last run ended with [0, 1, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.07s

Elapsed time: 22.71s

#########################
Last run ended with [0, 1, 0, 0, 1] and max_options=[2, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.4s

Elapsed time: 31.83s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 0, 0, 0, 0] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.45s

Elapsed time: 31.98s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 0, 0, 0, 1] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.43s

Elapsed time: 32.0s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 0, 0, 0, 2] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 0, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.45s

Elapsed time: 31.95s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 0, 0, 0, 3] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 0, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.29s

Elapsed time: 31.78s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 0, 0, 0, 4] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 0, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.94s

Elapsed time: 31.35s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 0, 0, 0, 5] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 0, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.21s

Elapsed time: 31.64s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 0, 0, 0, 6] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 0, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.31s

Elapsed time: 31.82s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 0, 0, 0, 7] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 0, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.3s

Elapsed time: 31.86s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 0, 0, 0, 8] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.26s

Elapsed time: 31.79s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 1, 0, 0, 0] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.39s

Elapsed time: 32.1s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 1, 0, 0, 1] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.99s

Elapsed time: 31.54s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 1, 0, 0, 2] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 1, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.38s

Elapsed time: 31.81s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 1, 0, 0, 3] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 1, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.59s

Elapsed time: 32.17s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 1, 0, 0, 4] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 1, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.3s

Elapsed time: 31.9s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 1, 0, 0, 5] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 1, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.35s

Elapsed time: 31.79s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 1, 0, 0, 6] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 1, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.73s

Elapsed time: 32.26s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 1, 0, 0, 7] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 0, 1, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.41s

Elapsed time: 31.99s

#########################
Last run ended with [0, 1, 0, 0, 2, 0, 1, 0, 0, 8] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 1, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.74s

Elapsed time: 31.39s

#########################
Last run ended with [0, 1, 0, 0, 2, 1, 0, 0, 0, 0] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 1, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.91s

Elapsed time: 31.32s

#########################
Last run ended with [0, 1, 0, 0, 2, 1, 0, 0, 0, 1] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 1, 0, 0, 2, 1, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.23s

Elapsed time: 31.89s

#########################
Last run ended with [0, 1, 0, 0, 2, 1, 0, 0, 0, 2] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 1, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.78s

Elapsed time: 31.27s

#########################
Last run ended with [0, 1, 0, 0, 2, 1, 1, 0, 0, 0] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 0, 0, 2, 1, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.98s

Elapsed time: 31.6s

#########################
Last run ended with [0, 1, 0, 0, 2, 1, 1, 0, 0, 1] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 1, 0, 0, 2, 1, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.51s

Elapsed time: 30.99s

#########################
Last run ended with [0, 1, 0, 0, 2, 1, 1, 0, 0, 2] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 1, 0, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.8s

Elapsed time: 22.21s

#########################
Last run ended with [0, 1, 1, 0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [0, 1, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.94s

Elapsed time: 22.43s

#########################
Last run ended with [0, 1, 1, 0, 1] and max_options=[2, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [0, 1, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.15s

Elapsed time: 22.69s

#########################
Last run ended with [0, 1, 1, 0, 2] and max_options=[2, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.35s

Elapsed time: 23.15s

Elapsed time: 29.83s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.1s

Elapsed time: 22.82s

Elapsed time: 29.27s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.62s

Elapsed time: 32.11s

Elapsed time: 38.62s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.01s

Elapsed time: 31.52s

Elapsed time: 37.95s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.37s

Elapsed time: 31.99s

Elapsed time: 38.39s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.35s

Elapsed time: 32.03s

Elapsed time: 38.49s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.72s

Elapsed time: 32.42s

Elapsed time: 38.95s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.88s

Elapsed time: 32.58s

Elapsed time: 39.17s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.64s

Elapsed time: 32.38s

Elapsed time: 39.11s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.81s

Elapsed time: 32.44s

Elapsed time: 39.02s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.34s

Elapsed time: 31.77s

Elapsed time: 38.22s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.45s

Elapsed time: 31.95s

Elapsed time: 38.57s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.02s

Elapsed time: 31.62s

Elapsed time: 38.26s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.56s

Elapsed time: 32.02s

Elapsed time: 38.47s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.06s

Elapsed time: 31.65s

Elapsed time: 38.31s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.14s

Elapsed time: 31.59s

Elapsed time: 38.07s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.2s

Elapsed time: 31.66s

Elapsed time: 38.1s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.96s

Elapsed time: 31.42s

Elapsed time: 37.83s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.29s

Elapsed time: 31.73s

Elapsed time: 38.16s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.48s

Elapsed time: 32.11s

Elapsed time: 38.93s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.9s

Elapsed time: 31.41s

Elapsed time: 37.95s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.95s

Elapsed time: 31.53s

Elapsed time: 38.11s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.98s

Elapsed time: 31.77s

Elapsed time: 38.4s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.88s

Elapsed time: 31.49s

Elapsed time: 38.0s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.51s

Elapsed time: 31.16s

Elapsed time: 37.61s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.12s

Elapsed time: 31.7s

Elapsed time: 38.17s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.13s

Elapsed time: 22.69s

Elapsed time: 29.32s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 0, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.12s

Elapsed time: 22.68s

Elapsed time: 29.27s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 0, 0, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.87s

Elapsed time: 22.33s

Elapsed time: 28.87s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.75s

Elapsed time: 22.23s

Elapsed time: 28.65s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.74s

Elapsed time: 22.22s

Elapsed time: 28.62s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.08s

Elapsed time: 31.84s

Elapsed time: 38.47s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.7s

Elapsed time: 32.45s

Elapsed time: 38.91s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.08s

Elapsed time: 31.61s

Elapsed time: 38.12s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.0s

Elapsed time: 31.48s

Elapsed time: 37.93s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.96s

Elapsed time: 31.4s

Elapsed time: 37.8s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.05s

Elapsed time: 31.56s

Elapsed time: 37.98s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.07s

Elapsed time: 31.54s

Elapsed time: 37.96s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.04s

Elapsed time: 31.51s

Elapsed time: 37.96s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.03s

Elapsed time: 31.49s

Elapsed time: 37.93s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.18s

Elapsed time: 31.66s

Elapsed time: 38.12s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.98s

Elapsed time: 31.46s

Elapsed time: 37.91s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.08s

Elapsed time: 31.53s

Elapsed time: 37.99s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.96s

Elapsed time: 31.4s

Elapsed time: 37.8s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.06s

Elapsed time: 31.51s

Elapsed time: 37.9s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.14s

Elapsed time: 31.57s

Elapsed time: 37.99s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.14s

Elapsed time: 31.63s

Elapsed time: 38.03s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.05s

Elapsed time: 31.53s

Elapsed time: 38.02s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.01s

Elapsed time: 31.49s

Elapsed time: 37.92s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.47s

Elapsed time: 30.95s

Elapsed time: 37.38s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.45s

Elapsed time: 30.96s

Elapsed time: 37.4s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.45s

Elapsed time: 30.89s

Elapsed time: 37.31s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.49s

Elapsed time: 30.95s

Elapsed time: 37.4s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.49s

Elapsed time: 30.99s

Elapsed time: 37.43s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.46s

Elapsed time: 30.93s

Elapsed time: 37.39s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.95s

Elapsed time: 22.45s

Elapsed time: 28.93s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 0, 1, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.89s

Elapsed time: 22.4s

Elapsed time: 28.85s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 0, 1, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.95s

Elapsed time: 22.48s

Elapsed time: 28.96s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.93s

Elapsed time: 22.4s

Elapsed time: 28.86s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.72s

Elapsed time: 22.24s

Elapsed time: 28.76s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.99s

Elapsed time: 31.45s

Elapsed time: 37.87s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.91s

Elapsed time: 31.35s

Elapsed time: 37.8s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.05s

Elapsed time: 31.52s

Elapsed time: 37.96s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.02s

Elapsed time: 31.48s

Elapsed time: 37.91s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.97s

Elapsed time: 31.44s

Elapsed time: 37.84s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.0s

Elapsed time: 31.45s

Elapsed time: 37.91s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.99s

Elapsed time: 31.45s

Elapsed time: 37.84s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.02s

Elapsed time: 31.5s

Elapsed time: 37.91s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.99s

Elapsed time: 31.49s

Elapsed time: 37.94s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.96s

Elapsed time: 31.4s

Elapsed time: 37.81s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.93s

Elapsed time: 31.38s

Elapsed time: 37.82s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.05s

Elapsed time: 31.53s

Elapsed time: 37.97s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.94s

Elapsed time: 31.41s

Elapsed time: 37.82s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.88s

Elapsed time: 31.39s

Elapsed time: 37.84s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.91s

Elapsed time: 31.34s

Elapsed time: 37.78s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 26.14s

Elapsed time: 32.56s

Elapsed time: 38.96s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 28.95s

Elapsed time: 35.86s

Elapsed time: 42.68s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.34s

Elapsed time: 31.91s

Elapsed time: 38.44s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.72s

Elapsed time: 31.27s

Elapsed time: 37.79s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.32s

Elapsed time: 30.79s

Elapsed time: 37.32s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.31s

Elapsed time: 30.79s

Elapsed time: 37.21s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 1, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.43s

Elapsed time: 30.91s

Elapsed time: 37.33s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 1, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 1, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.37s

Elapsed time: 30.82s

Elapsed time: 37.25s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 1, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 1, 0, 0, 0, 2, 1, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.37s

Elapsed time: 30.81s

Elapsed time: 37.21s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 2, 1, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.83s

Elapsed time: 22.29s

Elapsed time: 28.68s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 0, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.84s

Elapsed time: 22.29s

Elapsed time: 28.69s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 1, 0, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.85s

Elapsed time: 22.32s

Elapsed time: 28.72s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.65s

Elapsed time: 22.12s

Elapsed time: 28.53s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.67s

Elapsed time: 22.17s

Elapsed time: 28.6s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.22s

Elapsed time: 31.66s

Elapsed time: 38.11s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.87s

Elapsed time: 31.34s

Elapsed time: 37.75s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.93s

Elapsed time: 31.35s

Elapsed time: 37.75s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.97s

Elapsed time: 31.42s

Elapsed time: 37.83s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.96s

Elapsed time: 31.41s

Elapsed time: 37.82s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.93s

Elapsed time: 31.4s

Elapsed time: 37.78s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.96s

Elapsed time: 31.48s

Elapsed time: 37.89s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.95s

Elapsed time: 31.42s

Elapsed time: 37.85s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.97s

Elapsed time: 31.4s

Elapsed time: 37.84s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.01s

Elapsed time: 31.43s

Elapsed time: 37.87s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.92s

Elapsed time: 31.36s

Elapsed time: 37.78s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.04s

Elapsed time: 31.51s

Elapsed time: 37.95s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.97s

Elapsed time: 31.43s

Elapsed time: 37.84s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.0s

Elapsed time: 31.45s

Elapsed time: 37.89s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 4] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.13s

Elapsed time: 31.67s

Elapsed time: 38.12s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 5] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.09s

Elapsed time: 31.57s

Elapsed time: 38.02s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 6] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.04s

Elapsed time: 31.55s

Elapsed time: 38.02s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 7] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.97s

Elapsed time: 31.44s

Elapsed time: 37.91s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 8] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 1, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.43s

Elapsed time: 30.91s

Elapsed time: 37.36s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 1, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 1, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.42s

Elapsed time: 30.88s

Elapsed time: 37.37s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 1, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 1, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.7s

Elapsed time: 31.18s

Elapsed time: 37.62s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 1, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 1, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.65s

Elapsed time: 31.3s

Elapsed time: 37.85s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 1, 1, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 1, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.45s

Elapsed time: 30.95s

Elapsed time: 37.48s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 1, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 1, 1, 0, 0, 2, 1, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.45s

Elapsed time: 30.91s

Elapsed time: 37.31s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 2, 1, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.08s

Elapsed time: 22.54s

Elapsed time: 28.96s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 0, 0, 1, 1, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.79s

Elapsed time: 22.28s

Elapsed time: 28.7s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 0, 0, 1, 1, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.25s

Elapsed time: 22.94s

Elapsed time: 29.56s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.14s

Elapsed time: 22.57s

#########################
Last run ended with [1, 1, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.03s

Elapsed time: 22.46s

#########################
Last run ended with [1, 1, 0, 0, 1] and max_options=[2, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.97s

Elapsed time: 32.7s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 0, 0, 0, 0] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.8s

Elapsed time: 32.28s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 0, 0, 0, 1] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.6s

Elapsed time: 32.28s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 0, 0, 0, 2] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 0, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.39s

Elapsed time: 31.86s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 0, 0, 0, 3] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 0, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.62s

Elapsed time: 32.09s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 0, 0, 0, 4] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 0, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.02s

Elapsed time: 31.73s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 0, 0, 0, 5] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 0, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.83s

Elapsed time: 32.23s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 0, 0, 0, 6] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 0, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.71s

Elapsed time: 32.29s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 0, 0, 0, 7] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 0, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.43s

Elapsed time: 31.98s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 0, 0, 0, 8] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.46s

Elapsed time: 32.0s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 1, 0, 0, 0] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.24s

Elapsed time: 31.83s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 1, 0, 0, 1] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.07s

Elapsed time: 31.6s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 1, 0, 0, 2] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 1, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '3'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.47s

Elapsed time: 32.01s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 1, 0, 0, 3] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 1, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '4'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.62s

Elapsed time: 32.13s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 1, 0, 0, 4] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 1, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 25.24s

Elapsed time: 31.71s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 1, 0, 0, 5] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 1, 0, 0, 6]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '6'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.96s

Elapsed time: 31.38s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 1, 0, 0, 6] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 1, 0, 0, 7]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '7'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.88s

Elapsed time: 31.29s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 1, 0, 0, 7] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 0, 1, 0, 0, 8]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['pump', '!highwater', '!methane', '!prev_pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

4: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', 'consequent_exception(guarantee2_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

6: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

7: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

8: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', 'consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

Enter the index of your choice [0-8]: 

Choice taken: '8'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.91s

Elapsed time: 31.3s

#########################
Last run ended with [1, 1, 0, 0, 2, 0, 1, 0, 0, 8] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 8].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 1, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.53s

Elapsed time: 30.93s

#########################
Last run ended with [1, 1, 0, 0, 2, 1, 0, 0, 0, 0] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 1, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.29s

Elapsed time: 30.7s

#########################
Last run ended with [1, 1, 0, 0, 2, 1, 0, 0, 0, 1] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 1, 0, 0, 2, 1, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.34s

Elapsed time: 30.75s

#########################
Last run ended with [1, 1, 0, 0, 2, 1, 0, 0, 0, 2] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 1, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.91s

Elapsed time: 31.34s

#########################
Last run ended with [1, 1, 0, 0, 2, 1, 1, 0, 0, 0] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 0, 0, 2, 1, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.91s

Elapsed time: 31.44s

#########################
Last run ended with [1, 1, 0, 0, 2, 1, 1, 0, 0, 1] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 1, 0, 0, 2, 1, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=true|next(pump=true));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 24.95s

Elapsed time: 31.56s

#########################
Last run ended with [1, 1, 0, 0, 2, 1, 1, 0, 0, 2] and max_options=[2, 1, 1, 0, 2, 1, 1, 0, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.89s

Elapsed time: 22.37s

#########################
Last run ended with [1, 1, 1, 0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [1, 1, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.99s

Elapsed time: 22.42s

#########################
Last run ended with [1, 1, 1, 0, 1] and max_options=[2, 1, 1, 0, 2].
This run is Success - Assumptions and Guarantees Captured..
Moving to next run [1, 1, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.98s

Elapsed time: 22.62s

#########################
Last run ended with [1, 1, 1, 0, 2] and max_options=[2, 1, 1, 0, 2].
This run is Environment Assumptions Captured.
	Guarantees Different..
Moving to next run [2, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.1s

Elapsed time: 22.57s

#########################
Last run ended with [2, 0, 0, 0, 0] and max_options=[2, 1, 1, 0, 2].
This run is Alternative Realizable Specification Produced..
Moving to next run [2, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.96s

Elapsed time: 22.39s

#########################
Last run ended with [2, 0, 0, 0, 1] and max_options=[2, 1, 1, 0, 2].
This run is Alternative Realizable Specification Produced..
Moving to next run [2, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.52s

Elapsed time: 23.05s

#########################
Last run ended with [2, 0, 0, 0, 2] and max_options=[2, 1, 1, 0, 2].
This run is Alternative Realizable Specification Produced..
Moving to next run [2, 0, 1, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.7s

Elapsed time: 23.29s

#########################
Last run ended with [2, 0, 1, 0, 0] and max_options=[2, 1, 1, 0, 2].
This run is Alternative Realizable Specification Produced..
Moving to next run [2, 0, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.22s

Elapsed time: 22.75s

#########################
Last run ended with [2, 0, 1, 0, 1] and max_options=[2, 1, 1, 0, 2].
This run is Alternative Realizable Specification Produced..
Moving to next run [2, 0, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.37s

Elapsed time: 22.91s

#########################
Last run ended with [2, 0, 1, 0, 2] and max_options=[2, 1, 1, 0, 2].
This run is Alternative Realizable Specification Produced..
Moving to next run [2, 1, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.99s

Elapsed time: 22.43s

#########################
Last run ended with [2, 1, 0, 0, 0] and max_options=[2, 1, 1, 0, 2].
This run is Alternative Realizable Specification Produced..
Moving to next run [2, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.3s

Elapsed time: 22.91s

#########################
Last run ended with [2, 1, 0, 0, 1] and max_options=[2, 1, 1, 0, 2].
This run is Alternative Realizable Specification Produced..
Moving to next run [2, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 15.94s

Elapsed time: 22.33s

#########################
Last run ended with [2, 1, 0, 0, 2] and max_options=[2, 1, 1, 0, 2].
This run is Alternative Realizable Specification Produced..
Moving to next run [2, 1, 1, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.73s

Elapsed time: 23.44s

#########################
Last run ended with [2, 1, 1, 0, 0] and max_options=[2, 1, 1, 0, 2].
This run is Alternative Realizable Specification Produced..
Moving to next run [2, 1, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.48s

Elapsed time: 23.02s

#########################
Last run ended with [2, 1, 1, 0, 1] and max_options=[2, 1, 1, 0, 2].
This run is Alternative Realizable Specification Produced..
Moving to next run [2, 1, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['!highwater', '!methane', '!prev_pump', '!pump']

Enter the index of your choice [0-0]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 16.06s

Elapsed time: 22.63s

#########################
Last run ended with [2, 1, 1, 0, 2] and max_options=[2, 1, 1, 0, 2].
This run is Alternative Realizable Specification Produced..
Moving to next run None
#########################
[2, 1, 0, 1, 1, 1, 0, 2]

Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.03s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.37s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.99s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 0, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.72s

#########################
Last run ended with [0, 0, 0, 0, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 0, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.65s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 0, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.67s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 0, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.83s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 4.
Moving to next run [0, 0, 0, 0, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.67s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 0, 0, 1, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '4'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.65s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 4] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 0, 0, 1, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.29s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.21s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.33s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.24s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.24s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 0, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.26s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 0, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.23s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 0, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.23s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 0, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 1, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.35s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 1, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.3s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.3s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.37s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 1, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.35s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 1, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.35s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 1, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.34s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 1, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 0, 0, 1, 5, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.34s

#########################
Last run ended with [0, 0, 0, 0, 0, 1, 5, 1, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.76s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 0, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.74s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 0, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.74s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 0, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.71s

#########################
Last run ended with [0, 0, 0, 0, 1, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 0, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.61s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 0, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.64s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 0, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.63s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 4.
Moving to next run [0, 0, 0, 0, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.72s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 0, 1, 1, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '4'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.04s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 4] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 0, 1, 1, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.78s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.69s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.2s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.2s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.22s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 0, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.22s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 0, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.26s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 0, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.23s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 0, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 1, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.29s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 1, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.28s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.31s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.35s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 1, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.35s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 1, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.35s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 1, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.34s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 1, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 0, 1, 1, 5, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.34s

#########################
Last run ended with [0, 0, 0, 0, 1, 1, 5, 1, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.73s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.73s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.75s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 1, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.78s

#########################
Last run ended with [0, 0, 0, 1, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 1, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.68s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 1, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.62s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 1, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.66s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 4.
Moving to next run [0, 0, 0, 1, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.73s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 1, 0, 1, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '4'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.76s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 4] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 1, 0, 1, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.21s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.43s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.22s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.26s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.23s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 0, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.25s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 0, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.22s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 0, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.19s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 0, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 1, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.47s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 1, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.36s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.32s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.35s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 1, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.38s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 1, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.56s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 1, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.76s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 1, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 1, 0, 1, 5, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.53s

#########################
Last run ended with [0, 0, 0, 1, 0, 1, 5, 1, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.75s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 1, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.06s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 1, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.89s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 1, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.01s

#########################
Last run ended with [0, 0, 0, 1, 1, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 1, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.05s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 1, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.07s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 1, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 9.3s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 4.
Moving to next run [0, 0, 0, 1, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.66s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 1, 1, 1, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '4'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.64s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 4] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 1, 1, 1, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.24s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.31s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.72s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.38s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.57s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 0, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.98s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 0, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.28s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 0, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 9.96s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 0, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 1, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 9.68s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 1, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 9.25s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 9.15s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 8.72s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 1, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.33s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 1, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.37s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 1, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.37s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 1, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 0, 0, 1, 1, 1, 5, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.38s

#########################
Last run ended with [0, 0, 0, 1, 1, 1, 5, 1, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.72s

#########################
Last run ended with [0, 1, 0, 0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.81s

#########################
Last run ended with [0, 1, 0, 1] and max_options=[2, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.7s

#########################
Last run ended with [0, 1, 0, 2] and max_options=[2, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.9s

#########################
Last run ended with [0, 1, 0, 3] and max_options=[2, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.63s

#########################
Last run ended with [0, 1, 1, 0] and max_options=[2, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.6s

#########################
Last run ended with [0, 1, 1, 1] and max_options=[2, 1, 1, 5].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.64s

#########################
Last run ended with [0, 1, 1, 2] and max_options=[2, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 4.
Moving to next run [0, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.6s

#########################
Last run ended with [0, 1, 1, 3] and max_options=[2, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 1, 1, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '4'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.7s

#########################
Last run ended with [0, 1, 1, 4] and max_options=[2, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 1, 1, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.96s

#########################
Last run ended with [0, 1, 1, 5, 0, 0, 0] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 1, 1, 5, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.03s

#########################
Last run ended with [0, 1, 1, 5, 0, 0, 1] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 1, 1, 5, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.95s

#########################
Last run ended with [0, 1, 1, 5, 0, 0, 2] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 1, 1, 5, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.04s

#########################
Last run ended with [0, 1, 1, 5, 0, 0, 3] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 1, 1, 5, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.99s

#########################
Last run ended with [0, 1, 1, 5, 0, 1, 0] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 1, 1, 5, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.99s

#########################
Last run ended with [0, 1, 1, 5, 0, 1, 1] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 1, 1, 5, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.96s

#########################
Last run ended with [0, 1, 1, 5, 0, 1, 2] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 1, 1, 5, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.02s

#########################
Last run ended with [0, 1, 1, 5, 0, 1, 3] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 1, 1, 5, 1, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.1s

#########################
Last run ended with [0, 1, 1, 5, 1, 0, 0] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 1, 1, 5, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.06s

#########################
Last run ended with [0, 1, 1, 5, 1, 0, 1] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 1, 1, 5, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.09s

#########################
Last run ended with [0, 1, 1, 5, 1, 0, 2] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 1, 1, 5, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.09s

#########################
Last run ended with [0, 1, 1, 5, 1, 0, 3] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [0, 1, 1, 5, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.08s

#########################
Last run ended with [0, 1, 1, 5, 1, 1, 0] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [0, 1, 1, 5, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.07s

#########################
Last run ended with [0, 1, 1, 5, 1, 1, 1] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [0, 1, 1, 5, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.13s

#########################
Last run ended with [0, 1, 1, 5, 1, 1, 2] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [0, 1, 1, 5, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

	G(highwater=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.09s

#########################
Last run ended with [0, 1, 1, 5, 1, 1, 3] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.93s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 0, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.91s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 0, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.05s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 0, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.96s

#########################
Last run ended with [1, 0, 0, 0, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 0, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.85s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 0, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.85s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 0, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.9s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 4.
Moving to next run [1, 0, 0, 0, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.82s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 0, 0, 1, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '4'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.82s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 4] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 0, 0, 1, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 12.89s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.61s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.29s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.66s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.47s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 0, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.29s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 0, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.49s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 0, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.31s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 0, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 1, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.31s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 1, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.3s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.27s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.24s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 1, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.32s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 1, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.76s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 1, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.27s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 1, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 0, 0, 1, 5, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.3s

#########################
Last run ended with [1, 0, 0, 0, 0, 1, 5, 1, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 0, 1, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.93s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 0, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.92s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 0, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.94s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 0, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.08s

#########################
Last run ended with [1, 0, 0, 0, 1, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 0, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.83s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 0, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.92s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 0, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.85s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 4.
Moving to next run [1, 0, 0, 0, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.85s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 0, 1, 1, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '4'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.8s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 4] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 0, 1, 1, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.19s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.19s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.29s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.28s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.21s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 0, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.25s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 0, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.28s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 0, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.27s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 0, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 1, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.39s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 1, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.33s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.32s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.28s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 1, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.45s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 1, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.34s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 1, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.33s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 1, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 0, 1, 1, 5, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.71s

#########################
Last run ended with [1, 0, 0, 0, 1, 1, 5, 1, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 1, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.94s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 1, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.92s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 1, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.88s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 1, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.85s

#########################
Last run ended with [1, 0, 0, 1, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 1, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.81s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 1, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.79s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 1, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.86s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 4.
Moving to next run [1, 0, 0, 1, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.84s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 1, 0, 1, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '4'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.03s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 4] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 1, 0, 1, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.36s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.24s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.15s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.19s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.22s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 0, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.26s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 0, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.21s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 0, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.23s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 0, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 1, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.32s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 1, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.3s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.38s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.31s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 1, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.28s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 1, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.28s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 1, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.27s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 1, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 1, 0, 1, 5, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.29s

#########################
Last run ended with [1, 0, 0, 1, 0, 1, 5, 1, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 1, 1, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.88s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 0, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 1, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.88s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 1, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.89s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 1, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.86s

#########################
Last run ended with [1, 0, 0, 1, 1, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 1, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.85s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 1, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.85s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 1, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.85s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 4.
Moving to next run [1, 0, 0, 1, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.82s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 1, 1, 1, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '4'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.83s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 4] and max_options=[2, 1, 0, 1, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 1, 1, 1, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.24s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 0, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.2s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 0, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.19s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 0, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.2s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 0, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.26s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 0, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.17s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 0, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.21s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 0, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.21s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 0, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 1, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.37s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 1, 0, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.29s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 1, 0, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.28s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 1, 0, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.37s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 1, 0, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.35s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 1, 1, 0] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.31s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 1, 1, 1] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.27s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 1, 1, 2] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 0, 0, 1, 1, 1, 5, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-0]: 

Choice taken: '0'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 7.26s

#########################
Last run ended with [1, 0, 0, 1, 1, 1, 5, 1, 1, 3] and max_options=[2, 1, 0, 1, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.69s

#########################
Last run ended with [1, 1, 0, 0, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.7s

#########################
Last run ended with [1, 1, 0, 1] and max_options=[2, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.72s

#########################
Last run ended with [1, 1, 0, 2] and max_options=[2, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.7s

#########################
Last run ended with [1, 1, 0, 3] and max_options=[2, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.59s

#########################
Last run ended with [1, 1, 1, 0] and max_options=[2, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.72s

#########################
Last run ended with [1, 1, 1, 1] and max_options=[2, 1, 1, 5].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.62s

#########################
Last run ended with [1, 1, 1, 2] and max_options=[2, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 4.
Moving to next run [1, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.59s

#########################
Last run ended with [1, 1, 1, 3] and max_options=[2, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 1, 1, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '4'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.65s

#########################
Last run ended with [1, 1, 1, 4] and max_options=[2, 1, 1, 5].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 1, 1, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.04s

#########################
Last run ended with [1, 1, 1, 5, 0, 0, 0] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 1, 1, 5, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 5.99s

#########################
Last run ended with [1, 1, 1, 5, 0, 0, 1] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 1, 1, 5, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.03s

#########################
Last run ended with [1, 1, 1, 5, 0, 0, 2] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 1, 1, 5, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.0s

#########################
Last run ended with [1, 1, 1, 5, 0, 0, 3] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 1, 1, 5, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.04s

#########################
Last run ended with [1, 1, 1, 5, 0, 1, 0] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 1, 1, 5, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.01s

#########################
Last run ended with [1, 1, 1, 5, 0, 1, 1] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 1, 1, 5, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.02s

#########################
Last run ended with [1, 1, 1, 5, 0, 1, 2] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 1, 1, 5, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.08s

#########################
Last run ended with [1, 1, 1, 5, 0, 1, 3] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 1, 1, 5, 1, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.1s

#########################
Last run ended with [1, 1, 1, 5, 1, 0, 0] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 1, 1, 5, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.07s

#########################
Last run ended with [1, 1, 1, 5, 1, 0, 1] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 1, 1, 5, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.04s

#########################
Last run ended with [1, 1, 1, 5, 1, 0, 2] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 1, 1, 5, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.01s

#########################
Last run ended with [1, 1, 1, 5, 1, 0, 3] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [1, 1, 1, 5, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.08s

#########################
Last run ended with [1, 1, 1, 5, 1, 1, 0] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 1.
Moving to next run [1, 1, 1, 5, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.05s

#########################
Last run ended with [1, 1, 1, 5, 1, 1, 1] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Success - Assumptions and Guarantees Captured..
SPEC ID: 0.
Moving to next run [1, 1, 1, 5, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '2'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.07s

#########################
Last run ended with [1, 1, 1, 5, 1, 1, 2] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 2.
Moving to next run [1, 1, 1, 5, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '1'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

	G(methane=false-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nholds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_DEAD).\nnot_holds_at(methane,0,ini_S0_DEAD).\nnot_holds_at(pump,0,ini_S0_DEAD).\nholds_at(highwater,1,ini_S0_DEAD).\nholds_at(methane,1,ini_S0_DEAD).\nnot_holds_at(pump,1,ini_S0_DEAD).\n', 'ini_S0_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nholds_at(highwater,1,ini_S0_S1_DEAD).\nnot_holds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nholds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'
Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

Enter the index of your choice [0-3]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 6.15s

#########################
Last run ended with [1, 1, 1, 5, 1, 1, 3] and max_options=[2, 1, 1, 5, 1, 1, 3].
This run is Environment Assumptions Captured.
	Guarantees Different..
SPEC ID: 3.
Moving to next run [2, 0, 0, 0, 0, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.62s

#########################
Last run ended with [2, 0, 0, 0, 0, 0, 0] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 5.
Moving to next run [2, 0, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.7s

#########################
Last run ended with [2, 0, 0, 1] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 6.
Moving to next run [2, 0, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.69s

#########################
Last run ended with [2, 0, 0, 2] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 7.
Moving to next run [2, 0, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.63s

#########################
Last run ended with [2, 0, 0, 3] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 8.
Moving to next run [2, 0, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '4'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.66s

#########################
Last run ended with [2, 0, 0, 4] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 9.
Moving to next run [2, 0, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.66s

#########################
Last run ended with [2, 0, 0, 5] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 10.
Moving to next run [2, 0, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.63s

#########################
Last run ended with [2, 0, 1, 0] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 5.
Moving to next run [2, 0, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.67s

#########################
Last run ended with [2, 0, 1, 1] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 6.
Moving to next run [2, 0, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.58s

#########################
Last run ended with [2, 0, 1, 2] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 7.
Moving to next run [2, 0, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.59s

#########################
Last run ended with [2, 0, 1, 3] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 8.
Moving to next run [2, 0, 1, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '4'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.62s

#########################
Last run ended with [2, 0, 1, 4] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 9.
Moving to next run [2, 0, 1, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.67s

#########################
Last run ended with [2, 0, 1, 5] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 10.
Moving to next run [2, 1, 0, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.69s

#########################
Last run ended with [2, 1, 0, 0] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 5.
Moving to next run [2, 1, 0, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.61s

#########################
Last run ended with [2, 1, 0, 1] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 6.
Moving to next run [2, 1, 0, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.61s

#########################
Last run ended with [2, 1, 0, 2] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 7.
Moving to next run [2, 1, 0, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.64s

#########################
Last run ended with [2, 1, 0, 3] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 8.
Moving to next run [2, 1, 0, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '4'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.7s

#########################
Last run ended with [2, 1, 0, 4] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 9.
Moving to next run [2, 1, 0, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '0'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.98s

#########################
Last run ended with [2, 1, 0, 5] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 10.
Moving to next run [2, 1, 1, 0]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '0'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(highwater=true->highwater=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.67s

#########################
Last run ended with [2, 1, 1, 0] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 5.
Moving to next run [2, 1, 1, 1]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '1'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(highwater=true->methane=true|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.66s

#########################
Last run ended with [2, 1, 1, 1] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 6.
Moving to next run [2, 1, 1, 2]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '2'
Rule:

	G(highwater=true->next(pump=true));

Hypothesis:

	consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(highwater=true->pump=false|next(pump=true));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.65s

#########################
Last run ended with [2, 1, 1, 2] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 7.
Moving to next run [2, 1, 1, 3]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '3'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).

New Rule:

		G(methane=true->highwater=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.6s

#########################
Last run ended with [2, 1, 1, 3] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 8.
Moving to next run [2, 1, 1, 4]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '4'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).

New Rule:

		G(methane=true->methane=true|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.61s

#########################
Last run ended with [2, 1, 1, 4] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 9.
Moving to next run [2, 1, 1, 5]
#########################
Select an option by choosing its index:

0: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['antecedent_exception(assumption2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-2]: 

Choice taken: '2'
Rule:

	G(highwater=false|methane=false);

Hypothesis:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

	G(pump=true-> highwater=false|methane=false);

Unrealizable

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


No assumption weakening produces realizable spec (las file UNSAT)

Moving to Guarantee Weakening



Reverting to:

	antecedent_exception(assumption2_1,V1,V2) :- not_holds_at(pump,V1,V2).

Select an option by choosing its index:

0: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nholds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

1: ('not_holds_at(highwater,0,ini_S0_S1_DEAD).\nnot_holds_at(methane,0,ini_S0_S1_DEAD).\nnot_holds_at(pump,0,ini_S0_S1_DEAD).\nnot_holds_at(highwater,1,ini_S0_S1_DEAD).\nholds_at(methane,1,ini_S0_S1_DEAD).\nnot_holds_at(pump,1,ini_S0_S1_DEAD).\nholds_at(highwater,2,ini_S0_S1_DEAD).\nholds_at(methane,2,ini_S0_S1_DEAD).\nnot_holds_at(pump,2,ini_S0_S1_DEAD).\n', 'ini_S0_S1_DEAD')

Enter the index of your choice [0-1]: 

Choice taken: '1'


Unrealizable core:

guarantee1_1

13:	G(highwater=true->next(pump=true));



guarantee2_1

16:	G(methane=true->next(pump=false));



Select an option by choosing its index:

0: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

1: ['consequent_exception(guarantee1_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

2: ['consequent_exception(guarantee1_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

3: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(highwater,V1,V2).', '', '']

4: ['consequent_exception(guarantee2_1,V1,V2) :- holds_at(methane,V1,V2).', '', '']

5: ['consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).', '', '']

Enter the index of your choice [0-5]: 

Choice taken: '5'
Rule:

	G(methane=true->next(pump=false));

Hypothesis:

	consequent_exception(guarantee2_1,V1,V2) :- not_holds_at(pump,V1,V2).

New Rule:

		G(methane=true->pump=false|next(pump=false));

Realizable: success.

Fixed specification: /Users/tg4018/Documents/PhD/SpectraASPTranslators/input-files/examples/Minepump/minepump_strong_fixed.spectra

Elapsed time: 4.69s

#########################
Last run ended with [2, 1, 1, 5] and max_options=[2, 1, 1, 5].
This run is Alternative Realizable Specification Produced..
SPEC ID: 10.
Moving to next run None
#########################
[2, 1, 0, 1, 1, 1, 3]
